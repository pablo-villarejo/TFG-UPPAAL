<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>
// Parámetros de tiempo
const int green_time = 20;
const int red_time = 10;
const int tParadaMax = 15;
const int tParadaMin = 10;
const int tMetroLejosMax = 90;
const int tMetroLejosMin = 50;
const int tCocheLLegaSemaforoMax = 30;
const int tCocheLLegaSemaforoMin = 15;

bool semaforoCoche[2]= {0,0} ; //0 -&gt; rojo 1 -&gt; verde
int cochesEnCruce = 0;
int metrosEnCruce = 2; //Empieza en 2 porque los metros (siempre 2) empiezan ambos dentro del cruce

// Canal de sincronización para indicar paso permitido
broadcast chan greenCoche[2];
broadcast chan  redCoche [2];
broadcast chan metroAproximando; //Era urgent, se lo quitamos para que no de error
broadcast chan metroSaliendo;    //Era urgent, se lo quitamos para que no de error</declaration>
	<template>
		<name>Metro</name>
		<declaration>clock t;</declaration>
		<location id="id0" x="315" y="-110">
			<name x="324" y="-144">FueraCruce</name>
			<label kind="invariant" x="331" y="-119">t &lt;= tMetroLejosMax</label>
		</location>
		<location id="id1" x="-416" y="-8">
			<name x="-459" y="-42">DentroCruce</name>
			<label kind="invariant" x="-569" y="-17">t &lt;= tParadaMax</label>
		</location>
		<location id="id2" x="102" y="119">
			<name x="92" y="85">enLaParada</name>
			<label kind="invariant" x="43" y="136">t&lt;= tParadaMax</label>
		</location>
		<location id="id3" x="-271" y="162">
			<name x="-280" y="127">Alarma</name>
			<label kind="invariant" x="-280" y="110">t &lt;= 5</label>
		</location>
		<init ref="id1"/>
		<transition id="id4">
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="-306" y="255">t == 5</label>
			<label kind="assignment" x="-306" y="272">t := 0</label>
			<nail x="-221" y="255"/>
			<nail x="-323" y="255"/>
		</transition>
		<transition id="id5">
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="guard" x="-484" y="119">cochesEnCruce == 0</label>
			<label kind="assignment" x="-484" y="144">t:=0 , 
metrosEnCruce++</label>
		</transition>
		<transition id="id6">
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-170" y="153">cochesEnCruce != 0 &amp;&amp;
t &gt;= tParadaMax</label>
			<label kind="assignment" x="-170" y="195">t := 0</label>
		</transition>
		<transition id="id7">
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-119" y="-17">cochesEnCruce == 0 &amp;&amp;
t &gt;= tParadaMin</label>
			<label kind="assignment" x="-119" y="25">t := 0 , 
metrosEnCruce++</label>
		</transition>
		<transition id="id8">
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="331" y="8">t &gt;= tMetroLejosMin</label>
			<label kind="synchronisation" x="331" y="34">metroAproximando!</label>
			<label kind="assignment" x="331" y="59">t := 0</label>
			<nail x="306" y="102"/>
		</transition>
		<transition id="id9">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-255" y="-161">metroSaliendo!</label>
			<label kind="assignment" x="-255" y="-144">t := 0, 
metrosEnCruce--</label>
			<nail x="-195" y="-84"/>
		</transition>
	</template>
	<template>
		<name>SemaforoCoche</name>
		<parameter>int[0,1] d</parameter>
		<declaration>clock t;</declaration>
		<location id="id10" x="458" y="-102">
			<name x="467" y="-127">Rojo</name>
		</location>
		<location id="id11" x="93" y="0">
			<name x="34" y="-25">Verde</name>
		</location>
		<location id="id12" x="212" y="-110">
			<committed/>
		</location>
		<location id="id13" x="340" y="0">
			<committed/>
		</location>
		<init ref="id10"/>
		<transition id="id14">
			<source ref="id10"/>
			<target ref="id13"/>
			<label kind="guard" x="408" y="-51">metrosEnCruce == 1</label>
			<label kind="synchronisation" x="408" y="-34">metroSaliendo?</label>
		</transition>
		<transition id="id15">
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="17" y="-85">metroAproximando?</label>
		</transition>
		<transition id="id16">
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="229" y="68">greenCoche[d]!</label>
			<label kind="assignment" x="229" y="42">semaforoCoche[d] = 1</label>
			<nail x="323" y="17"/>
			<nail x="280" y="17"/>
		</transition>
		<transition id="id17">
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="297" y="-187">redCoche[d]!</label>
			<label kind="assignment" x="297" y="-170">semaforoCoche[d] = 0</label>
			<nail x="246" y="-127"/>
		</transition>
	</template>
	<template>
		<name>Coche</name>
		<parameter>int[0,1] d</parameter>
		<declaration>clock t;</declaration>
		<location id="id18" x="-68" y="-110">
			<name x="-145" y="-170">EsperaPorRojo</name>
		</location>
		<location id="id19" x="200" y="0">
			<name x="195" y="-34">Cruzando</name>
			<label kind="invariant" x="195" y="17">t&lt;=2</label>
		</location>
		<location id="id20" x="25" y="93">
			<name x="-8" y="102">HaCruzado</name>
			<label kind="invariant" x="0" y="127">t&lt;=100</label>
		</location>
		<location id="id21" x="-195" y="0">
			<name x="-289" y="-8">Llegando</name>
			<label kind="invariant" x="-425" y="8">t &lt;= tCocheLLegaSemaforoMax</label>
		</location>
		<init ref="id21"/>
		<transition id="id22">
			<source ref="id21"/>
			<target ref="id19"/>
			<label kind="guard" x="-85" y="-76">semaforoCoche[d] == 1 &amp;&amp; 
t &gt;= tCocheLLegaSemaforoMin</label>
			<label kind="assignment" x="-85" y="-42">t:=0,
cochesEnCruce++</label>
			<nail x="-59" y="0"/>
		</transition>
		<transition id="id23">
			<source ref="id21"/>
			<target ref="id18"/>
			<label kind="guard" x="-348" y="-119">semaforoCoche[d] == 0 &amp;&amp; 
t &gt;= tCocheLLegaSemaforoMin</label>
			<label kind="assignment" x="-348" y="-76">t := 0</label>
		</transition>
		<transition id="id24">
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-110" y="59">t&gt;=100</label>
			<label kind="assignment" x="-110" y="85">t := 0</label>
		</transition>
		<transition id="id25">
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="42" y="-178">greenCoche[d]?</label>
			<label kind="assignment" x="42" y="-153">t:=0 ,
cochesEnCruce++</label>
			<nail x="34" y="-102"/>
			<nail x="109" y="-93"/>
		</transition>
		<transition id="id26">
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="119" y="51">t&gt;=1</label>
			<label kind="assignment" x="119" y="68">cochesEnCruce--,
t := 0</label>
			<nail x="76" y="68"/>
		</transition>
	</template>
	<system>
// Instanciación
SemaforoCoche1 = SemaforoCoche(0); // 0 es dirección ascendente, 1 es descendente.
SemaforoCoche2 = SemaforoCoche(1); 
Metro1 = Metro();
Metro2 = Metro();
Coche1 = Coche(0); // 0 es dirección ascendente, 1 es descendente.
Coche2 = Coche(1);

// Declaración del sistema
system SemaforoCoche1, SemaforoCoche2, Metro1, Metro2, Coche1, Coche2;


/*
Al añadir una direccion: int[0,1] d tanto a SemaforoCoche como a Coche, he tenido varios problemas que he resuelto así:

- En SemaforoCoche, he tenido que añadir [d] a las sync de los canales.
- Las guardas de reloj no se permiten en "urgent edges", así que he tenido que eliminarlas.
- En coche, me da el error: "Guard must be side-effect_free". No entiendo por qué ocurre ni sé solucionarlo.

Otra opcion:

EN coche, de llegando a espera por rojo:
En vez de
t &gt;= tCocheLLegaSemaforoMin
hacer
t &gt;= tCocheLLegaSemaforoMax
Simulando "ir despacito" porque lo ves rojo de lejos.

Nuevas propiedades:

No puede ser cochesEncruce &gt; 0 y metrosEnCruce &gt; 0 a la vez.
Mismo Semaforo algun momento en rojo y otro en verde.
Existe alguna combinacion con dos metros en el cruce a la vez. Que sea posible.
Existe alguna combinacion con dos coches en el cruce a la vez. Que sea posible.
Si el metro esta en alarma --&gt; Esta DentroCruce. Va a consumir y tardar mucho probablemente. 

*/</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment>El sistema nunca entra en deadlock</comment>
			<result outcome="success" type="quality" timestamp="2025-05-08 15:27:49 +0200">
			</result>
		</query>
		<query>
			<formula>A&lt;&gt; Coche1.Cruzando</formula>
			<comment>El vehículo 1 puede cruzar eventualmente en todas las trazas.  Añadir el coche 2 a la misma. En otra, lo mismo con el metro. </comment>
			<result outcome="success" type="quality" timestamp="2025-05-08 17:12:09 +0200">
			</result>
		</query>
		<query>
			<formula>A&lt;&gt; SemaforoCoche1.Verde and SemaforoCoche2.Verde</formula>
			<comment>Ambos semáforos pueden estar en verde al mismo tiempo</comment>
			<result outcome="success" type="quality" timestamp="2025-05-08 17:15:01 +0200">
			</result>
		</query>
		<query>
			<formula>A[] (SemaforoCoche1.Verde imply SemaforoCoche2.Verde) &amp;&amp; (SemaforoCoche2.Verde imply SemaforoCoche1.Verde)</formula>
			<comment>Ambos semáforos están sincronizados (verdes al mismo tiempo). Cambiar a que no puede estar uno en verde y otro en rojo. </comment>
			<result outcome="failure" type="quality" timestamp="2025-05-08 17:15:14 +0200">
			</result>
		</query>
		<query>
			<formula>Coche1.Llegando --&gt; Coche1.Cruzando </formula>
			<comment>Cosume mucho checkarla, a ver si se puede probar de otra manera. </comment>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
